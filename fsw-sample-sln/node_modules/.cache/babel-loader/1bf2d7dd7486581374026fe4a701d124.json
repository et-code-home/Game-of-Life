{"ast":null,"code":"import _classCallCheck from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: {\n      backgroundColor: props.bgColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n}\n\nvar StopButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StopButton, _React$Component);\n\n  function StopButton() {\n    _classCallCheck(this, StopButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StopButton).apply(this, arguments));\n  }\n\n  _createClass(StopButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('stopping simulation');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      // This syntax ensures `this` is bound within handleClick\n      return React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this.handleClick(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"\\u25A0 Stop\");\n    }\n  }]);\n\n  return StopButton;\n}(React.Component);\n\nvar PlayButton =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PlayButton, _React$Component2);\n\n  function PlayButton() {\n    _classCallCheck(this, PlayButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlayButton).apply(this, arguments));\n  }\n\n  _createClass(PlayButton, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('starting simulation');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // This syntax ensures `this` is bound within handleClick\n      return React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.handleClick(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"\\u25B6 Play\");\n    }\n  }]);\n\n  return PlayButton;\n}(React.Component);\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Board, _React$Component3);\n\n  function Board(props) {\n    var _this3;\n\n    _classCallCheck(this, Board);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this3.playSim = function () {\n      _this3.setState({\n        simulationRunning: true\n      });\n    };\n\n    _this3.stopSim = function () {\n      _this3.setState({\n        simulationRunning: false\n      });\n    };\n\n    _this3.state = {\n      squares: Array(400).fill('white'),\n      simulationRunning: false,\n      generation: 0,\n      size: 20\n    };\n    return _this3;\n  }\n\n  _createClass(Board, [{\n    key: \"buildNextGen\",\n    value: function buildNextGen() {\n      var newSquares = this.state.squares;\n\n      for (var i = 0; i < newSquares.length; i++) {\n        var liveNeighbors = 0;\n        var curStatus = this.state.squares[i]; // check 8 neighbors in squares, count black (alive)\n\n        if (curStatus === 'black') // is alive, will neighbors kill it?\n          {\n            if (liveNeighbors === 2 || liveNeighbors === 3) {\n              newSquares[i] = 'black'; // staying alive!\n            } else {\n              newSquares[i] = 'white'; // death by overcrowding or underpopulation\n            }\n          } else // is dead, is situation right for birth?\n          {\n            if (liveNeighbors === 3) {\n              newSquares[i] = 'black'; // yes\n            } else {\n              newSquares[i] = 'white'; // no\n            }\n          }\n      } // wait ??? seconds\n      // set Board's squares to newSquares\n\n\n      this.setState({\n        squares: newSquares,\n        generation: this.state.generation + 1\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (this.state.simulationRunning) {\n        return;\n      }\n\n      if (squares[i] === 'white') {\n        squares[i] = 'black';\n      } else {\n        squares[i] = 'white';\n      }\n\n      this.setState({\n        squares: squares\n      });\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this4 = this;\n\n      return React.createElement(Square, {\n        bgColor: this.state.squares[i],\n        onClick: function onClick() {\n          return _this4.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status;\n      status = 'Generation: ' + this.state.generation;\n      return React.createElement(\"div\", {\n        className: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2), this.renderSquare(3), this.renderSquare(4)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.renderSquare(5), this.renderSquare(6), this.renderSquare(7), this.renderSquare(8), this.renderSquare(9)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.renderSquare(10), this.renderSquare(11), this.renderSquare(12), this.renderSquare(13), this.renderSquare(14)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.renderSquare(15), this.renderSquare(16), this.renderSquare(17), this.renderSquare(18), this.renderSquare(19)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.renderSquare(20), this.renderSquare(21), this.renderSquare(22), this.renderSquare(23), this.renderSquare(24)), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.simulationRunning ? React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.stopGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Stop\") : React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.runGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Run\")));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Simulation =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(Simulation, _React$Component4);\n\n  function Simulation() {\n    _classCallCheck(this, Simulation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Simulation).apply(this, arguments));\n  }\n\n  _createClass(Simulation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"sim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sim-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sim-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(PlayButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(StopButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sim-about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"About this Algorithm...\"), React.createElement(\"div\", {\n        className: \"sim-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Simulation;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Simulation, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 214\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","backgroundColor","bgColor","StopButton","console","log","e","handleClick","Component","PlayButton","Board","playSim","setState","simulationRunning","stopSim","state","squares","Array","fill","generation","size","newSquares","i","length","liveNeighbors","curStatus","slice","status","renderSquare","stopGame","runGame","Simulation","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n  function Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick} style={{backgroundColor:props.bgColor}} >\n        \n        {/* {props.value} */}\n        \n      </button>\n    );\n  }\n\n  class StopButton extends React.Component {\n    handleClick() {\n      console.log('stopping simulation');\n    }\n  \n    render() {\n      // This syntax ensures `this` is bound within handleClick\n      return (\n        <button onClick={(e) => this.handleClick(e)}>\n          ■ Stop\n        </button>\n      );\n    }\n  }\n\nclass PlayButton extends React.Component {\n    handleClick() {\n      console.log('starting simulation');\n    }\n  \n    render() {\n      // This syntax ensures `this` is bound within handleClick\n      return (\n        <button onClick={(e) => this.handleClick(e)}>\n          ▶ Play\n        </button>\n      );\n    }\n  }\n\n  class Board extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        squares: Array(400).fill('white'),\n        simulationRunning: false,\n        generation: 0,\n        size: 20,\n      };\n    }\n\n    buildNextGen() {\n        var newSquares = this.state.squares;\n        for(var i=0; i<newSquares.length; i++ ) {\n            var liveNeighbors = 0;\n            var curStatus = this.state.squares[i];\n\n            // check 8 neighbors in squares, count black (alive)\n\n            if( curStatus === 'black' ) // is alive, will neighbors kill it?\n            {\n                if( liveNeighbors === 2 || liveNeighbors === 3 )\n                {\n                    newSquares[i] = 'black'; // staying alive!\n                }\n                else\n                {\n                    newSquares[i] = 'white'; // death by overcrowding or underpopulation\n                }\n            }\n            else  // is dead, is situation right for birth?\n            {\n                if( liveNeighbors === 3 )\n                {\n                    newSquares[i] = 'black'; // yes\n                }\n                else\n                {\n                    newSquares[i] = 'white'; // no\n                }\n            }\n\n        }\n        // wait ??? seconds\n\n        // set Board's squares to newSquares\n        this.setState({\n            squares: newSquares,\n            generation: this.state.generation + 1,\n          });\n    }\n  \n    handleClick(i) {\n      const squares = this.state.squares.slice();\n      if (this.state.simulationRunning) {\n        return;\n      }\n      if( squares[i] === 'white') {\n          squares[i] = 'black';\n      }\n      else {\n          squares[i] = 'white';\n      }\n      this.setState({\n        squares: squares,\n      });\n    }\n\n    playSim = () => {\n        this.setState({ simulationRunning: true });\n    }\n\n    stopSim = () => {\n        this.setState({ simulationRunning: false });\n    }\n  \n    renderSquare(i) {\n      return (\n        <Square\n          bgColor={this.state.squares[i]}\n          onClick={() => this.handleClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      let status;\n      \n      status = 'Generation: ' + this.state.generation;\n       \n      return (\n          <div className=\"top\">\n                <div className=\"status\">{status}</div>\n\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(5)}\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                    {this.renderSquare(9)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(10)}\n                    {this.renderSquare(11)}\n                    {this.renderSquare(12)}\n                    {this.renderSquare(13)}\n                    {this.renderSquare(14)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(15)}\n                    {this.renderSquare(16)}\n                    {this.renderSquare(17)}\n                    {this.renderSquare(18)}\n                    {this.renderSquare(19)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(20)}\n                    {this.renderSquare(21)}\n                    {this.renderSquare(22)}\n                    {this.renderSquare(23)}\n                    {this.renderSquare(24)}\n                </div>\n                <div className=\"controls\">\n                    {this.state.simulationRunning ?\n                        <button className=\"button\"\n                            onClick={this.stopGame}>Stop</button> :\n                        <button className=\"button\"\n                            onClick={this.runGame}>Run</button>\n                    }\n        </div>\n            </div>\n      );\n    }\n  }\n  \n  class Simulation extends React.Component {\n    render() {\n      return (\n        <div className=\"sim\">\n          <div className=\"sim-board\">\n            <Board /> \n\n          </div>\n          <div className=\"sim-controls\" >\n            <PlayButton /><StopButton />\n          </div>\n          <div className=\"sim-about\">\n                About this Algorithm...\n            </div>\n          <div className=\"sim-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Simulation />,\n    document.getElementById('root')\n  );\n"]},"metadata":{},"sourceType":"module"}