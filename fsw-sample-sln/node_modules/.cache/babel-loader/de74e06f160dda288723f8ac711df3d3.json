{"ast":null,"code":"import _classCallCheck from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Edit \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Learn React\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"my-canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar canvas = document.getElementById('my-canvas');\nvar ctx = canvas.getContext('2d');\nvar imageData = ctx.getImageData(0, 0, canvas.width, canvas.height); // Here is the screen buffer array we can manipulate:\n// Set the pixel at 10,20 to pure red and display on the canvas:\n\nvar buffer = imageData.data; // Obtained from getImageData()\n\nvar x = 10,\n    y = 20;\nvar index = (y * width + x) * 4;\nbuffer[index + 0] = 0xff; // Red: 0xff == 255, full intensity\n\nbuffer[index + 1] = 0x00; // Green: zero intensity\n\nbuffer[index + 2] = 0x00; // Blue: zero intensity\n\nbuffer[index + 3] = 0xff; // Alpha: 0xff == 255, fully opaque\n\nctx.putImageData(imageData, 0, 0);\nexport default App;","map":{"version":3,"sources":["/Users/elissathomas/Documents/GitHub/Conways-Life/fsw-sample-sln/src/App.js"],"names":["React","Component","App","logo","canvas","document","getElementById","ctx","getContext","imageData","getImageData","width","height","buffer","data","x","y","index","putImageData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADP,yBAFF,EAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAfF,CADF;AAqBD;;;;EAvBeF,S;;AA0BlB,IAAIG,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAb;AACA,IAAIC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAV;AAEA,IAAIC,SAAS,GAAGF,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBN,MAAM,CAACO,KAA9B,EAAqCP,MAAM,CAACQ,MAA5C,CAAhB,C,CAEA;AAEA;;AAEA,IAAIC,MAAM,GAAGJ,SAAS,CAACK,IAAvB,C,CAA6B;;AAE7B,IAAIC,CAAC,GAAG,EAAR;AAAA,IAAYC,CAAC,GAAG,EAAhB;AACA,IAAIC,KAAK,GAAG,CAACD,CAAC,GAAGL,KAAJ,GAAYI,CAAb,IAAkB,CAA9B;AAEAF,MAAM,CAACI,KAAK,GAAG,CAAT,CAAN,GAAoB,IAApB,C,CAA0B;;AAC1BJ,MAAM,CAACI,KAAK,GAAG,CAAT,CAAN,GAAoB,IAApB,C,CAA0B;;AAC1BJ,MAAM,CAACI,KAAK,GAAG,CAAT,CAAN,GAAoB,IAApB,C,CAA0B;;AAC1BJ,MAAM,CAACI,KAAK,GAAG,CAAT,CAAN,GAAoB,IAApB,C,CAA0B;;AAE1BV,GAAG,CAACW,YAAJ,CAAiBT,SAAjB,EAA4B,CAA5B,EAA+B,CAA/B;AAEA,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <p>\n          <canvas id=\"my-canvas\"></canvas>\n        </p>\n      </div>\n    );\n  }\n}\n\nlet canvas = document.getElementById('my-canvas');\nlet ctx = canvas.getContext('2d');\n\nlet imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n// Here is the screen buffer array we can manipulate:\n\n// Set the pixel at 10,20 to pure red and display on the canvas:\n\nlet buffer = imageData.data; // Obtained from getImageData()\n\nlet x = 10, y = 20;\nlet index = (y * width + x) * 4;\n\nbuffer[index + 0] = 0xff; // Red: 0xff == 255, full intensity\nbuffer[index + 1] = 0x00; // Green: zero intensity\nbuffer[index + 2] = 0x00; // Blue: zero intensity\nbuffer[index + 3] = 0xff; // Alpha: 0xff == 255, fully opaque\n\nctx.putImageData(imageData, 0, 0);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}